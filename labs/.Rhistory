chisq.pregn <- chisq.test(table.pregn, simulate.p.value = TRUE)
p.pregnancies[i] <- chisq.pregn$p.value
# Litter size
l.cmp1 <- data.breedingL$LitterSize[idx.list1[[i]]]
l.cmp2 <- data.breedingL$LitterSize[idx.list2[[i]]]
wilcox.litter<- wilcox.test(l.cmp1, l.cmp2)
p.litterSize[i] <- wilcox.litter$p.value
# Survival
table.surv <- matrix(data=NA, ncol=2, nrow=2)
colnames(table.surv) <- c(cmp1[i], cmp2[i])
rownames(table.surv) <- c("S", "F")
surv1.1 <- sum(data.breedingL$Survived[idx.list1[[i]]], na.rm=T)
surv1.0 <- sum(l.cmp1, na.rm=T)-surv1.1
surv2.1 <- sum(data.breedingL$Survived[idx.list2[[i]]], na.rm=T)
surv2.0 <- sum(l.cmp2, na.rm=T)-surv2.1
table.surv[1,1] <- surv1.1
table.surv[2,1] <- surv1.0
table.surv[1,2] <- surv2.1
table.surv[2,2] <- surv2.0
#print(table.surv)
chisq.surv<- chisq.test(table.surv, simulate.p.value = TRUE)
p.survival[i] <- chisq.surv$p.value
}
# Out pregnancies
p.pregnanciesAdjust <- p.adjust(p.pregnancies, method="BH")
p.pregnanciesSign <- c()
p.pregnanciesSign[p.pregnanciesAdjust<0.05] <- "*"
out.pregnancies <- data.frame(pvalue=p.pregnancies, BH=p.pregnanciesAdjust, significance=p.pregnanciesSign)
rownames(out.pregnancies) <- paste(cmp1, cmp2, sep=" vs. ")
print(xtable(out.pregnancies,  align=c("l","r","r","r"), caption="Comparison of successful pregnancies"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
# Out litter size
p.litterAdjust <- p.adjust(p.litterSize, method="BH")
p.litterSign <- c()
p.litterSign[p.litterAdjust<0.05] <- "*"
out.litter <- data.frame(pvalue=p.litterSize, BH=p.litterAdjust, significance=p.litterSign)
rownames(out.litter) <- paste(cmp1, cmp2, sep=" vs. ")
print(xtable(out.litter,  align=c("l","r","r","r"), caption="Comparison of litter size"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
# Out survival
p.survivalAdjust <- p.adjust(p.survival, method="BH")
p.survivalSign <- c()
p.survivalSign[p.survivalAdjust<0.05] <- "*"
out.survival <- data.frame(pvalue=p.survival, BH=p.survivalAdjust, significance=p.survivalSign)
rownames(out.survival) <- paste(cmp1, cmp2, sep=" vs. ")
print(xtable(out.survival,  align=c("l","r","r","r"), caption="Comparison of survival"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
print(xtable(out.pregnancies,  align=c("l","r","r","r"), caption="Comparison of successful pregnancies"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
print(xtable(out.litter,  align=c("l","r","r","r"), caption="Comparison of litter size"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
print(xtable(out.survival,  align=c("l","r","r","r"), caption="Comparison of survival"),
caption.placement = "bottom",
size="footnotesize",
include.rownames=TRUE,
floating=TRUE,
table.placement="H")
data.pcaS <- as.matrix(data.pca[, 5:ncol(data.pca)])
file.pca <- '/Users/olga/Documents/BILS/!PROJECTS/2890_SU/Pauter/DATA/tmpPCA_corrected.txt'
data.pca <- read.delim(file.pca)
DHA=rep("DHA+", nrow(data.pca))
idx.minus <- grep("DHA-", data.pca$Group)
DHA[idx.minus] <- "DHA-"
data.pcaS <- as.matrix(data.pca[, 5:ncol(data.pca)])
fatty.30 <-c("C12:0", "C14:0", "C16:0", "C16:n-9", "C16:1n-7", "C18:0", "C18:1(n-9)", "C18:1(n-7)","C18:2(n-6)", "C18:3(n-6)", "C18:3(n-3)", "C18:4(n-3)", "C20:1(n-9)", "C20:1(n-7)", "C20:2(n-6)", "C20:3(n-6)", "C20:4(n-6)",  "C20:3(n-3)", "C22:0", "C22:1(n-11)", "C20:4(n-3)", "C22:1(n-9)", "C20:5(n-3)", "C22:2(n-6)", "C22:3(n-3)", "C22:4(n-6)", "C24:0", "C24:1", "C22:5(n-3)", "C22:6(n-3)")
colnames(data.pcaS) <- fatty.30
dim(data.pca)
head(data.pca)
16+16+4
4*8
32+12
?rm
rm(list=ls())
a=1
b=1
rm(list=ls())
?trendVar
library(scater)
library(scater)
?trendVar
library(scran)
?trendVar
?set.seed
?rnorm()
rnorm(10)
rnorm(10)
rnorm(10)
set.seed(10)
rnorm(10)
rnorm(10)
set.seed(10)
rnorm(10)
12*50
48+36+36
600-120
600-120-40-30-30
200/50
summary(cars)
test=1:10
test
test.table <- rbind(test, test, test)
test.table
kable(head(test.table))
library(knitr)
kable(head(test.table))
colnames(test.table) <- "c"
colnames(test.table) <- paste("c", 1:10)
kable(head(test.table))
?kable
v=1:10
v
data<- rbind(v, v, v)
data
colnames(data) <- paste("c", 1:10, sep="")
paste("c", 1:10, sep="")
paste("c", 1:10, sep="")
rownames(data) <- paste("r", nrow(data), sep="")
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:10, sep="")
rownames(data) <- paste("r", nrow(data), sep="")
rownames(data) <- paste("r", nrows(data), sep="")
nrow(data)
rownames(data) <- paste("r", 1:nrow(data), sep="")
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(head(data))
colnames(data) <- paste("c", 1:ncol(data), sep="@")
kable(head(data))
colnames(data) <- paste("c", 1:ncol(data), sep="_")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(head(data))
kable(data)
?kable
v=rand(1,10)
data<- rbind(v, v, v)
v=randn(1,10)
?runif
v=runif(10, 0, 1)
v
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data)
kable(data, digits=2)
kable(data, digits=2, row.names=F, col.names=F)
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=F)
kable(data, digits=2, row.names=FALSE, col.names=FALSE)
kable(data, digits=2, row.names=T, col.names=T)
kable(data, digits=2, row.names=T)
kable(data, digits=2, row.names=F)
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""))
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
summary(out)$coef
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
n <- 100
x <- rnorm(n)
y <- 2*x + rnorm(n)
out <- lm(y ~ x)
library(xtable)
tab <- xtable(summary(out)$coef, digits=c(0, 2, 2, 1, 2))
print(tab, type="html")
tab <- xtable(data)
print(tab, type="html")
library(Seurat)
?quietly
require(xyz, quietly = TRUE)
?version
R.version
data<- rbind(v, v, v)
data<- rbind(v, v, v)
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
# n <- 100
# x <- rnorm(n)
# y <- 2*x + rnorm(n)
# out <- lm(y ~ x)
# library(xtable)
# tab <- xtable(data)
# print(tab, type="html")
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
# n <- 100
# x <- rnorm(n)
# y <- 2*x + rnorm(n)
# out <- lm(y ~ x)
# library(xtable)
# tab <- xtable(data)
# print(tab, type="html")
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
# n <- 100
# x <- rnorm(n)
# y <- 2*x + rnorm(n)
# out <- lm(y ~ x)
# library(xtable)
# tab <- xtable(data)
# print(tab, type="html")
library(knitr)
summary(cars)
v=runif(10, 0, 1)
data<- rbind(v, v, v)
colnames(data) <- paste("c", 1:ncol(data), sep="")
rownames(data) <- paste("r", 1:nrow(data), sep="")
kable(data, digits=2, row.names=F, col.names=paste("newc", 1:ncol(data), sep=""), align="c", caption="My table")
# n <- 100
# x <- rnorm(n)
# y <- 2*x + rnorm(n)
# out <- lm(y ~ x)
# library(xtable)
# tab <- xtable(data)
# print(tab, type="html")
test
test2 <- test+10
ls
test
test2
test3 <- cbind(test, test2)
test3
which(test>4 | test2>14)
install.packages("devtools")
library(devtools)
install_url("https://github.com/satijalab/seurat/releases/download/v1.4.0/Seurat_1.4.0.4.tgz", binary = TRUE)
library(Seurat)
library(Seurat)
test
test2
test3
as.matrix(test3)
test3[1,1]="bla"
test3
test3 <- cbind(test, test2)
test3
test3[1,1]="d"
test3
test4 <- data.frame(c1=test3[,1], test)
test4
test4[1,1]
as.class(test3)
class(test3)
test3
class(test4)
test4$teset
test4$test
mode(test3)
mode(test4)
mode(test3[,1])
mode(test3[,2])
mode(test4[,2])
mode(test4[,2])
test3
test3$test
names(test3)
?"matrix"
library(Seurat)
library(Seurat)
library(dplyr)
library(Matrix)
pbmc.data <- Read10X("~/Downloads/filtered_gene_bc_matrices/hg19/")
library(Seurat)
library(dplyr)
library(Matrix)
76*2
16*8
7*24
14*24
3*8
4*8
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/00-Reports/P1858_aggregate_report.csv"
data.report <- read.delim(file.report)
head(data.report)
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/P1858_aggregate_report_20170110.txt"
data.report <- read.delim(file.report)
head(data.report)
dim(data.report)
boxplot(data.report$automsomal_coverage)
?stripchart
boxplot(data.report$automsomal_coverage)
stripchart(data.report$automsomal_coverage)
stripchart(data.report$automsomal_coverage, vertical = TRUE, add=TRUE)
boxplot(data.report$automsomal_coverage)
stripchart(data.report$automsomal_coverage, vertical = TRUE, add=TRUE)
stripchart(data.report$automsomal_coverage, vertical = TRUE, add=TRUE, method = "jitter")
stripchart(data.report$automsomal_coverage, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$automsomal_coverage)
stripchart(data.report$automsomal_coverage, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$automsomal_coverage, ylab="dd")
boxplot(data.report$mean_coverage, ylab="")
stripchart(data.report$mean_coverage, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/P1858_aggregate_report_20170110.txt"
data.report <- read.delim(file.report)
head(data.report)
boxplot(data.report$duplication_rate, ylab="")
stripchart(data.report$duplication_rate, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$percent_aligned, ylab="")
stripchart(data.report$percent_aligned, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
?par
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/P1858_aggregate_report_20170110.txt"
data.report <- read.delim(file.report)
boxplot(data.report$snpeff.heterotypic_snps, ylab="mean coverage")
head(data.report$snpeff.heterotypic_snps)
data.report <- read.delim(file.report)
boxplot(data.report$snpeff.heterotypic_snps, ylab="mean coverage")
data.report <- read.delim(file.report)
head(data.report$snpeff.heterotypic_snps)
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/P1858_aggregate_report_20170110.txt"
data.report <- read.delim(file.report)
head(data.report)
file.report <- "/Users/olga/Documents/NBIS/!PROJECTS/3339_schizophrenia/P1858_aggregate_report_20170110.txt"
data.report <- read.delim(file.report)
boxplot(data.report$snpeff.heterotypic_snps, ylab="mean coverage")
boxplot(data.report$snpeff.heterotypic_snps, ylab="SNPs heterotypic")
stripchart(data.report$snpeff.heterotypic_snps, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$snpeff.homotypic_snps, ylab="SNPs homotypic")
stripchart(data.report$snpeff.homotypic_snps, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$snpeff.heterotypic_snps, ylab="SNPs heterotypic ")
stripchart(data.report$snpeff.heterotypic_snps, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$snpeff.homotypic_snps, ylab="SNPs homotypic")
stripchart(data.report$snpeff.homotypic_snps, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
boxplot(data.report$snpeff.percent_missense_SNPs, ylab="duplication rate [%]")
stripchart(data.report$snpeff.percent_missense_SNPs, vertical = TRUE, add=TRUE, method = "jitter", col="blue")
?Ressssion
?Rsession
?R.session
755 - 261
90/4
90/4.5
8 + 12 + 5
16*2
76*2
158+78+278
citation()
3.9+0.8+1.8
100-6.5
3.9+0.8+1.6
100-6.3
152/2
1400/4
1500/4
2300/4
3400+3000+4800
3400+3000+4800
11200/4
3400+4800+300
3400+4800+3000
11200/4
11200/4/6
2200+149+149+70
463182/12
18*2*90
250*5
225*5
225*5*4
2013+1849
all <- 2013+1849
201300/all
184900/all
60*800
3*8
90*18*2
11520/18
4*8
110/8
1195/12
1195/10
40*4
1195/10/4
16*4
20*4
6*8
6*5
15*4
110/4
110/2
7883472/4
library(edgeR)
targets
25+8
20/4
20/5
30/5
40/5
library(sva)
?ComBat
a=1:10
mydata <- rbind(a,a,a,a)
mydata
mybatch=rep(1,2,5)
mybatch
mybatch=rep(c(1,2),5)
mybatch
dataNew <- ComBat(mydata, mybatch)
dataNew <- ComBat(mydata, mybatch, par.prior=TRUE, prior.plots=FALSE)
dataNew <- ComBat(mydata, mybatch, par.prior=TRUE)
mymatrix <- rand(5,10)
mymatrix <- randn(5,10)
mymatrix <- replicate(10, rnorm(20))
mymatrix
dim(mymatrix)
length(batch)
length(mybatch)
dataNew <- ComBat(mymatrix, mybatch, par.prior=TRUE)
mymatrix
dataNew <- ComBat(mymatrix, mybatch, par.prior=TRUE)
head(mymatrix)
head(dataNew)
19+6
19+8
19+9
60 - 8
52-35
40-10-6
40 - 7 - 16
16*800
800*8
install.packages('maps')
install.packages('geosphere')
library('maps')
library('geosphere')
map("state", col="grey20", fill=TRUE, bg="black", lwd=0.1)
?map
map("sweden", col="grey20", fill=TRUE, bg="black", lwd=0.1)
map(database = "world", col="grey20", fill=TRUE, bg="black", lwd=0.1)
help(package='maps')
map(database = "italy", col="grey20", fill=TRUE, bg="black", lwd=0.1)
install.packages("mapdata")
map('worldHires','Italy')
map('world2Hires')
map('worldHires')
?map
library(sp)
con <- url("http://gadm.org/data/rda/CHE_adm1.RData")
print(load(con))
con <- url("http://gadm.org/data/rda/CHE_adm1.RData")
print(load(con))
map()
map('world2Hires')
?map
map('worldHires')
?sessionInfo()
8*7
8*7+24
8*7+24+14+16+14
40 - 14
40 - 14 - 14
40 - 14 - 16
40 - 14 - 18
16+8
total=1670
asa=220
asa*100/total
160/40
178-40
?save
save.image(file="counts.RData")
40+24+80
80 - 55
80 - 55 - 16
40 - 24
80-65
setwd("~/Documents/NBIS/Teaching/201710_ChIP-seq/Git/labs")
1637778*2
1637778*2-372742
372742*100/(1637778*2)
setwd("~/Documents/NBIS/Teaching/201710_ChIP-seq/Git/labs")
